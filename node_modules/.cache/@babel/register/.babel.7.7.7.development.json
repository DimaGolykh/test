{
  "{\"sourceRoot\":\"D:\\\\pr_weather\\\\weather\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\pr_weather\\\\weather\",\"filename\":\"D:\\\\pr_weather\\\\weather\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\pr_weather\\\\weather\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\pr_weather\\weather\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\pr_weather\\weather",
      "filename": "D:\\pr_weather\\weather\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\pr_weather\\weather",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\pr_weather\\weather\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\pr_weather\\weather\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\pr_weather\\weather\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst express = require('express'); //const MongoClient    = require('mongodb').MongoClient;\n\n\nconst app = express();\n\nconst weather = require('./Moduls/WheatherExtService').weather;\n\napp.get('/weather', async function (req, res) {\n  const query = req.query; //queryConstructor(req.query);//\n\n  const clientId = query['clientId '];\n  const clientX = query['clientX'];\n  const clientY = query['clientY'];\n  console.log(\"query = \" + query);\n  const result = await weather(clientX, clientY, clientId);\n  res.send(result);\n});\nconst port = 3000;\napp.listen(port, () => {\n  console.log('I was run on 3000 port');\n});\n/*  перенести в модуль weather -Start-*/\n\n/* перенести в модуль weather -Finish*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsIndlYXRoZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJxdWVyeSIsImNsaWVudElkIiwiY2xpZW50WCIsImNsaWVudFkiLCJjb25zb2xlIiwibG9nIiwicmVzdWx0Iiwic2VuZCIsInBvcnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsT0FBTyxHQUFVQyxPQUFPLENBQUMsU0FBRCxDQUE5QixDLENBQ0E7OztBQUNBLE1BQU1DLEdBQUcsR0FBY0YsT0FBTyxFQUE5Qjs7QUFDQSxNQUFNRyxPQUFPLEdBQUdGLE9BQU8sQ0FBQyw2QkFBRCxDQUFQLENBQXVDRSxPQUF2RDs7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsVUFBUixFQUFvQixnQkFBZUMsR0FBZixFQUFvQkMsR0FBcEIsRUFBd0I7QUFDeEMsUUFBTUMsS0FBSyxHQUFHRixHQUFHLENBQUNFLEtBQWxCLENBRHdDLENBQ2Y7O0FBQ3pCLFFBQU1DLFFBQVEsR0FBR0QsS0FBSyxDQUFDLFdBQUQsQ0FBdEI7QUFDQSxRQUFNRSxPQUFPLEdBQUlGLEtBQUssQ0FBQyxTQUFELENBQXRCO0FBQ0EsUUFBTUcsT0FBTyxHQUFJSCxLQUFLLENBQUMsU0FBRCxDQUF0QjtBQUNBSSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFhTCxLQUF6QjtBQUNBLFFBQU1NLE1BQU0sR0FBRyxNQUFNVixPQUFPLENBQUNNLE9BQUQsRUFBVUMsT0FBVixFQUFtQkYsUUFBbkIsQ0FBNUI7QUFDQUYsRUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVNELE1BQVQ7QUFDSCxDQVJEO0FBVUEsTUFBTUUsSUFBSSxHQUFHLElBQWI7QUFDQWIsR0FBRyxDQUFDYyxNQUFKLENBQVdELElBQVgsRUFBaUIsTUFBTTtBQUNuQkosRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksd0JBQVo7QUFDSCxDQUZEO0FBSUE7O0FBRUEiLCJzb3VyY2VSb290IjoiRDpcXHByX3dlYXRoZXJcXHdlYXRoZXJcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgICAgICAgID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG4vL2NvbnN0IE1vbmdvQ2xpZW50ICAgID0gcmVxdWlyZSgnbW9uZ29kYicpLk1vbmdvQ2xpZW50O1xyXG5jb25zdCBhcHAgICAgICAgICAgICA9IGV4cHJlc3MoKTtcclxuY29uc3Qgd2VhdGhlciA9IHJlcXVpcmUoJy4vTW9kdWxzL1doZWF0aGVyRXh0U2VydmljZScpLndlYXRoZXI7XHJcblxyXG5hcHAuZ2V0KCcvd2VhdGhlcicsIGFzeW5jIGZ1bmN0aW9uKHJlcSwgcmVzKXtcclxuICAgIGNvbnN0IHF1ZXJ5ID0gcmVxLnF1ZXJ5OyAvL3F1ZXJ5Q29uc3RydWN0b3IocmVxLnF1ZXJ5KTsvL1xyXG4gICAgY29uc3QgY2xpZW50SWQgPSBxdWVyeVsnY2xpZW50SWQgJ107XHJcbiAgICBjb25zdCBjbGllbnRYID0gIHF1ZXJ5WydjbGllbnRYJ107XHJcbiAgICBjb25zdCBjbGllbnRZID0gIHF1ZXJ5WydjbGllbnRZJ107XHJcbiAgICBjb25zb2xlLmxvZyhcInF1ZXJ5ID0gXCIgKyBxdWVyeSk7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB3ZWF0aGVyKGNsaWVudFgsIGNsaWVudFksIGNsaWVudElkKTtcclxuICAgIHJlcy5zZW5kKHJlc3VsdCk7XHJcbn0pO1xyXG5cclxuY29uc3QgcG9ydCA9IDMwMDA7XHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ0kgd2FzIHJ1biBvbiAzMDAwIHBvcnQnKTtcclxufSk7XHJcblxyXG4vKiAg0L/QtdGA0LXQvdC10YHRgtC4INCyINC80L7QtNGD0LvRjCB3ZWF0aGVyIC1TdGFydC0qL1xyXG5cclxuLyog0L/QtdGA0LXQvdC10YHRgtC4INCyINC80L7QtNGD0LvRjCB3ZWF0aGVyIC1GaW5pc2gqL1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "weather",
        "get",
        "req",
        "res",
        "query",
        "clientId",
        "clientX",
        "clientY",
        "console",
        "log",
        "result",
        "send",
        "port",
        "listen"
      ],
      "mappings": ";;AAAA,MAAMA,OAAO,GAAUC,OAAO,CAAC,SAAD,CAA9B,C,CACA;;;AACA,MAAMC,GAAG,GAAcF,OAAO,EAA9B;;AACA,MAAMG,OAAO,GAAGF,OAAO,CAAC,6BAAD,CAAP,CAAuCE,OAAvD;;AAEAD,GAAG,CAACE,GAAJ,CAAQ,UAAR,EAAoB,gBAAeC,GAAf,EAAoBC,GAApB,EAAwB;AACxC,QAAMC,KAAK,GAAGF,GAAG,CAACE,KAAlB,CADwC,CACf;;AACzB,QAAMC,QAAQ,GAAGD,KAAK,CAAC,WAAD,CAAtB;AACA,QAAME,OAAO,GAAIF,KAAK,CAAC,SAAD,CAAtB;AACA,QAAMG,OAAO,GAAIH,KAAK,CAAC,SAAD,CAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,KAAzB;AACA,QAAMM,MAAM,GAAG,MAAMV,OAAO,CAACM,OAAD,EAAUC,OAAV,EAAmBF,QAAnB,CAA5B;AACAF,EAAAA,GAAG,CAACQ,IAAJ,CAASD,MAAT;AACH,CARD;AAUA,MAAME,IAAI,GAAG,IAAb;AACAb,GAAG,CAACc,MAAJ,CAAWD,IAAX,EAAiB,MAAM;AACnBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,CAFD;AAIA;;AAEA",
      "sourceRoot": "D:\\pr_weather\\weather\\src",
      "sourcesContent": [
        "const express        = require('express');\r\n//const MongoClient    = require('mongodb').MongoClient;\r\nconst app            = express();\r\nconst weather = require('./Moduls/WheatherExtService').weather;\r\n\r\napp.get('/weather', async function(req, res){\r\n    const query = req.query; //queryConstructor(req.query);//\r\n    const clientId = query['clientId '];\r\n    const clientX =  query['clientX'];\r\n    const clientY =  query['clientY'];\r\n    console.log(\"query = \" + query);\r\n    const result = await weather(clientX, clientY, clientId);\r\n    res.send(result);\r\n});\r\n\r\nconst port = 3000;\r\napp.listen(port, () => {\r\n    console.log('I was run on 3000 port');\r\n});\r\n\r\n/*  перенести в модуль weather -Start-*/\r\n\r\n/* перенести в модуль weather -Finish*/\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576856712609
  },
  "{\"sourceRoot\":\"D:\\\\pr_weather\\\\weather\\\\src\\\\Moduls\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\pr_weather\\\\weather\",\"filename\":\"D:\\\\pr_weather\\\\weather\\\\src\\\\Moduls\\\\WheatherExtService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\pr_weather\\\\weather\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\pr_weather\\weather\\src\\Moduls",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\pr_weather\\weather",
      "filename": "D:\\pr_weather\\weather\\src\\Moduls\\WheatherExtService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\pr_weather\\weather",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\pr_weather\\weather\\src\\Moduls\\WheatherExtService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\pr_weather\\weather\\src\\Moduls\\WheatherExtService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\pr_weather\\weather\\src\\Moduls",
        "sourceFileName": "WheatherExtService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst axios = require('axios');\n\nconst getWeatherServiceUrl = () => {\n  return 'https://api.darksky.net/forecast';\n};\n\nconst getApiKey = () => {\n  return 'f79522d053ece9ec8e3754744eff140d';\n}; //42.3601,-71.0589\n\n\nconst weatherUrl = getWeatherServiceUrl();\nconst apiKey = getApiKey();\n\nconst weather = (clientX, clientY, clientId) => {\n  // console.log('query = ' + query);\n  console.log('url = ' + weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY);\n  const res = axios.get(weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY).then(response => response.data);\n  console.log('res = ' + res);\n  console.log(res);\n  return res;\n};\n\nexports.weather = weather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldoZWF0aGVyRXh0U2VydmljZS5qcyJdLCJuYW1lcyI6WyJheGlvcyIsInJlcXVpcmUiLCJnZXRXZWF0aGVyU2VydmljZVVybCIsImdldEFwaUtleSIsIndlYXRoZXJVcmwiLCJhcGlLZXkiLCJ3ZWF0aGVyIiwiY2xpZW50WCIsImNsaWVudFkiLCJjbGllbnRJZCIsImNvbnNvbGUiLCJsb2ciLCJyZXMiLCJnZXQiLCJ0aGVuIiwicmVzcG9uc2UiLCJkYXRhIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU1DLG9CQUFvQixHQUFHLE1BQU07QUFBQyxTQUFPLGtDQUFQO0FBQTJDLENBQS9FOztBQUNBLE1BQU1DLFNBQVMsR0FBRyxNQUFNO0FBQUMsU0FBTyxrQ0FBUDtBQUEyQyxDQUFwRSxDLENBQXNFOzs7QUFDdEUsTUFBTUMsVUFBVSxHQUFHRixvQkFBb0IsRUFBdkM7QUFDQSxNQUFNRyxNQUFNLEdBQUdGLFNBQVMsRUFBeEI7O0FBRUEsTUFBTUcsT0FBTyxHQUFHLENBQUNDLE9BQUQsRUFBVUMsT0FBVixFQUFtQkMsUUFBbkIsS0FBZ0M7QUFDNUM7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBV1AsVUFBWCxHQUF3QixHQUF4QixHQUE4QkMsTUFBOUIsR0FBdUMsR0FBdkMsR0FBNkNFLE9BQTdDLEdBQXVELEdBQXZELEdBQTZEQyxPQUF6RTtBQUNBLFFBQU1JLEdBQUcsR0FBR1osS0FBSyxDQUFDYSxHQUFOLENBQVVULFVBQVUsR0FBRyxHQUFiLEdBQW1CQyxNQUFuQixHQUE0QixHQUE1QixHQUFrQ0UsT0FBbEMsR0FBNEMsR0FBNUMsR0FBa0RDLE9BQTVELEVBQXFFTSxJQUFyRSxDQUEwRUMsUUFBUSxJQUFJQSxRQUFRLENBQUNDLElBQS9GLENBQVo7QUFDQU4sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBV0MsR0FBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLEdBQVo7QUFDQSxTQUFPQSxHQUFQO0FBQ0gsQ0FQRDs7QUFTQUssT0FBTyxDQUFDWCxPQUFSLEdBQWtCQSxPQUFsQiIsInNvdXJjZVJvb3QiOiJEOlxccHJfd2VhdGhlclxcd2VhdGhlclxcc3JjXFxNb2R1bHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XHJcbmNvbnN0IGdldFdlYXRoZXJTZXJ2aWNlVXJsID0gKCkgPT4ge3JldHVybiAnaHR0cHM6Ly9hcGkuZGFya3NreS5uZXQvZm9yZWNhc3QnO307XHJcbmNvbnN0IGdldEFwaUtleSA9ICgpID0+IHtyZXR1cm4gJ2Y3OTUyMmQwNTNlY2U5ZWM4ZTM3NTQ3NDRlZmYxNDBkJzt9OyAvLzQyLjM2MDEsLTcxLjA1ODlcclxuY29uc3Qgd2VhdGhlclVybCA9IGdldFdlYXRoZXJTZXJ2aWNlVXJsKCk7XHJcbmNvbnN0IGFwaUtleSA9IGdldEFwaUtleSgpO1xyXG5cclxuY29uc3Qgd2VhdGhlciA9IChjbGllbnRYLCBjbGllbnRZLCBjbGllbnRJZCkgPT4ge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3F1ZXJ5ID0gJyArIHF1ZXJ5KTtcclxuICAgIGNvbnNvbGUubG9nKCd1cmwgPSAnICsgd2VhdGhlclVybCArICcvJyArIGFwaUtleSArICcvJyArIGNsaWVudFggKyAnLCcgKyBjbGllbnRZKTtcclxuICAgIGNvbnN0IHJlcyA9IGF4aW9zLmdldCh3ZWF0aGVyVXJsICsgJy8nICsgYXBpS2V5ICsgJy8nICsgY2xpZW50WCArICcsJyArIGNsaWVudFkpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuZGF0YSk7XHJcbiAgICBjb25zb2xlLmxvZygncmVzID0gJyArIHJlcyk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgcmV0dXJuIHJlcztcclxufTtcclxuXHJcbmV4cG9ydHMud2VhdGhlciA9IHdlYXRoZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "WheatherExtService.js"
      ],
      "names": [
        "axios",
        "require",
        "getWeatherServiceUrl",
        "getApiKey",
        "weatherUrl",
        "apiKey",
        "weather",
        "clientX",
        "clientY",
        "clientId",
        "console",
        "log",
        "res",
        "get",
        "then",
        "response",
        "data",
        "exports"
      ],
      "mappings": ";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,oBAAoB,GAAG,MAAM;AAAC,SAAO,kCAAP;AAA2C,CAA/E;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAC,SAAO,kCAAP;AAA2C,CAApE,C,CAAsE;;;AACtE,MAAMC,UAAU,GAAGF,oBAAoB,EAAvC;AACA,MAAMG,MAAM,GAAGF,SAAS,EAAxB;;AAEA,MAAMG,OAAO,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAmBC,QAAnB,KAAgC;AAC5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,UAAX,GAAwB,GAAxB,GAA8BC,MAA9B,GAAuC,GAAvC,GAA6CE,OAA7C,GAAuD,GAAvD,GAA6DC,OAAzE;AACA,QAAMI,GAAG,GAAGZ,KAAK,CAACa,GAAN,CAAUT,UAAU,GAAG,GAAb,GAAmBC,MAAnB,GAA4B,GAA5B,GAAkCE,OAAlC,GAA4C,GAA5C,GAAkDC,OAA5D,EAAqEM,IAArE,CAA0EC,QAAQ,IAAIA,QAAQ,CAACC,IAA/F,CAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWC,GAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,SAAOA,GAAP;AACH,CAPD;;AASAK,OAAO,CAACX,OAAR,GAAkBA,OAAlB",
      "sourceRoot": "D:\\pr_weather\\weather\\src\\Moduls",
      "sourcesContent": [
        "const axios = require('axios');\r\nconst getWeatherServiceUrl = () => {return 'https://api.darksky.net/forecast';};\r\nconst getApiKey = () => {return 'f79522d053ece9ec8e3754744eff140d';}; //42.3601,-71.0589\r\nconst weatherUrl = getWeatherServiceUrl();\r\nconst apiKey = getApiKey();\r\n\r\nconst weather = (clientX, clientY, clientId) => {\r\n    // console.log('query = ' + query);\r\n    console.log('url = ' + weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY);\r\n    const res = axios.get(weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY).then(response => response.data);\r\n    console.log('res = ' + res);\r\n    console.log(res);\r\n    return res;\r\n};\r\n\r\nexports.weather = weather;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576856318205
  },
  "{\"sourceRoot\":\"D:\\\\pr_weather\\\\weather\\\\src\\\\Moduls\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\pr_weather\\\\weather\",\"filename\":\"D:\\\\pr_weather\\\\weather\\\\src\\\\Moduls\\\\WheatherExtService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\pr_weather\\\\weather\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\pr_weather\\weather\\src\\Moduls",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\pr_weather\\weather",
      "filename": "D:\\pr_weather\\weather\\src\\Moduls\\WheatherExtService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\pr_weather\\weather",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\pr_weather\\weather\\src\\Moduls\\WheatherExtService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\pr_weather\\weather\\src\\Moduls\\WheatherExtService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\pr_weather\\weather\\src\\Moduls",
        "sourceFileName": "WheatherExtService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst axios = require('axios');\n\nconst getWeatherServiceUrl = () => {\n  return 'https://api.darksky.net/forecast';\n};\n\nconst getApiKey = () => {\n  return 'f79522d053ece9ec8e3754744eff140d';\n}; //42.3601,-71.0589\n\n\nconst weatherUrl = getWeatherServiceUrl();\nconst apiKey = getApiKey();\n\nconst weather = (clientX, clientY, clientId) => {\n  // console.log('query = ' + query);\n  console.log('url = ' + weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY);\n  const res = axios.get(weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY).then(response => response.data);\n  console.log('res = ' + res);\n  console.log(res);\n  return res;\n};\n\nexports.weather = weather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldoZWF0aGVyRXh0U2VydmljZS5qcyJdLCJuYW1lcyI6WyJheGlvcyIsInJlcXVpcmUiLCJnZXRXZWF0aGVyU2VydmljZVVybCIsImdldEFwaUtleSIsIndlYXRoZXJVcmwiLCJhcGlLZXkiLCJ3ZWF0aGVyIiwiY2xpZW50WCIsImNsaWVudFkiLCJjbGllbnRJZCIsImNvbnNvbGUiLCJsb2ciLCJyZXMiLCJnZXQiLCJ0aGVuIiwicmVzcG9uc2UiLCJkYXRhIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU1DLG9CQUFvQixHQUFHLE1BQU07QUFBQyxTQUFPLGtDQUFQO0FBQTJDLENBQS9FOztBQUNBLE1BQU1DLFNBQVMsR0FBRyxNQUFNO0FBQUMsU0FBTyxrQ0FBUDtBQUEyQyxDQUFwRSxDLENBQXNFOzs7QUFDdEUsTUFBTUMsVUFBVSxHQUFHRixvQkFBb0IsRUFBdkM7QUFDQSxNQUFNRyxNQUFNLEdBQUdGLFNBQVMsRUFBeEI7O0FBRUEsTUFBTUcsT0FBTyxHQUFHLENBQUNDLE9BQUQsRUFBVUMsT0FBVixFQUFtQkMsUUFBbkIsS0FBZ0M7QUFDNUM7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBV1AsVUFBWCxHQUF3QixHQUF4QixHQUE4QkMsTUFBOUIsR0FBdUMsR0FBdkMsR0FBNkNFLE9BQTdDLEdBQXVELEdBQXZELEdBQTZEQyxPQUF6RTtBQUNBLFFBQU1JLEdBQUcsR0FBR1osS0FBSyxDQUFDYSxHQUFOLENBQVVULFVBQVUsR0FBRyxHQUFiLEdBQW1CQyxNQUFuQixHQUE0QixHQUE1QixHQUFrQ0UsT0FBbEMsR0FBNEMsR0FBNUMsR0FBa0RDLE9BQTVELEVBQXFFTSxJQUFyRSxDQUEwRUMsUUFBUSxJQUFJQSxRQUFRLENBQUNDLElBQS9GLENBQVo7QUFDQU4sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBV0MsR0FBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLEdBQVo7QUFDQSxTQUFPQSxHQUFQO0FBQ0gsQ0FQRDs7QUFTQUssT0FBTyxDQUFDWCxPQUFSLEdBQWtCQSxPQUFsQiIsInNvdXJjZVJvb3QiOiJEOlxccHJfd2VhdGhlclxcd2VhdGhlclxcc3JjXFxNb2R1bHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XHJcbmNvbnN0IGdldFdlYXRoZXJTZXJ2aWNlVXJsID0gKCkgPT4ge3JldHVybiAnaHR0cHM6Ly9hcGkuZGFya3NreS5uZXQvZm9yZWNhc3QnO307XHJcbmNvbnN0IGdldEFwaUtleSA9ICgpID0+IHtyZXR1cm4gJ2Y3OTUyMmQwNTNlY2U5ZWM4ZTM3NTQ3NDRlZmYxNDBkJzt9OyAvLzQyLjM2MDEsLTcxLjA1ODlcclxuY29uc3Qgd2VhdGhlclVybCA9IGdldFdlYXRoZXJTZXJ2aWNlVXJsKCk7XHJcbmNvbnN0IGFwaUtleSA9IGdldEFwaUtleSgpO1xyXG5cclxuY29uc3Qgd2VhdGhlciA9IChjbGllbnRYLCBjbGllbnRZLCBjbGllbnRJZCkgPT4ge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3F1ZXJ5ID0gJyArIHF1ZXJ5KTtcclxuICAgIGNvbnNvbGUubG9nKCd1cmwgPSAnICsgd2VhdGhlclVybCArICcvJyArIGFwaUtleSArICcvJyArIGNsaWVudFggKyAnLCcgKyBjbGllbnRZKTtcclxuICAgIGNvbnN0IHJlcyA9IGF4aW9zLmdldCh3ZWF0aGVyVXJsICsgJy8nICsgYXBpS2V5ICsgJy8nICsgY2xpZW50WCArICcsJyArIGNsaWVudFkpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuZGF0YSk7XHJcbiAgICBjb25zb2xlLmxvZygncmVzID0gJyArIHJlcyk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgcmV0dXJuIHJlcztcclxufTtcclxuXHJcbmV4cG9ydHMud2VhdGhlciA9IHdlYXRoZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "WheatherExtService.js"
      ],
      "names": [
        "axios",
        "require",
        "getWeatherServiceUrl",
        "getApiKey",
        "weatherUrl",
        "apiKey",
        "weather",
        "clientX",
        "clientY",
        "clientId",
        "console",
        "log",
        "res",
        "get",
        "then",
        "response",
        "data",
        "exports"
      ],
      "mappings": ";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,oBAAoB,GAAG,MAAM;AAAC,SAAO,kCAAP;AAA2C,CAA/E;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAC,SAAO,kCAAP;AAA2C,CAApE,C,CAAsE;;;AACtE,MAAMC,UAAU,GAAGF,oBAAoB,EAAvC;AACA,MAAMG,MAAM,GAAGF,SAAS,EAAxB;;AAEA,MAAMG,OAAO,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAmBC,QAAnB,KAAgC;AAC5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,UAAX,GAAwB,GAAxB,GAA8BC,MAA9B,GAAuC,GAAvC,GAA6CE,OAA7C,GAAuD,GAAvD,GAA6DC,OAAzE;AACA,QAAMI,GAAG,GAAGZ,KAAK,CAACa,GAAN,CAAUT,UAAU,GAAG,GAAb,GAAmBC,MAAnB,GAA4B,GAA5B,GAAkCE,OAAlC,GAA4C,GAA5C,GAAkDC,OAA5D,EAAqEM,IAArE,CAA0EC,QAAQ,IAAIA,QAAQ,CAACC,IAA/F,CAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWC,GAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,SAAOA,GAAP;AACH,CAPD;;AASAK,OAAO,CAACX,OAAR,GAAkBA,OAAlB",
      "sourceRoot": "D:\\pr_weather\\weather\\src\\Moduls",
      "sourcesContent": [
        "const axios = require('axios');\r\nconst getWeatherServiceUrl = () => {return 'https://api.darksky.net/forecast';};\r\nconst getApiKey = () => {return 'f79522d053ece9ec8e3754744eff140d';}; //42.3601,-71.0589\r\nconst weatherUrl = getWeatherServiceUrl();\r\nconst apiKey = getApiKey();\r\n\r\nconst weather = (clientX, clientY, clientId) => {\r\n    // console.log('query = ' + query);\r\n    console.log('url = ' + weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY);\r\n    const res = axios.get(weatherUrl + '/' + apiKey + '/' + clientX + ',' + clientY).then(response => response.data);\r\n    console.log('res = ' + res);\r\n    console.log(res);\r\n    return res;\r\n};\r\n\r\nexports.weather = weather;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576856318205
  }
}